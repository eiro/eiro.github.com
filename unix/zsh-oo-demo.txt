# perldoc this file to read this
# zsh this file to see how it works

: <<\=cut

=head1 WARNING!

... for demonstration purpose only

=head1 Synopsis

this is a very basic example of data structure programming in zsh.
same mechanism could be used for classes and inheritance but

    * some conventions and helpers should be provided
    * how slow is this OO ? as always in shell
      * probably much more than your C++ code
      * probably acceptable in 80% of the usecases
      * probably surprisingly fast in some cases
      * optimization is the root of all evil

an object is just a directory into your namespace

    /dev/shm   = in memory
    /tmp/      = temporary (tmpreapers and reboot)
    /var/myapp = persistent

=cut

# constructor
new () {
    typeset -g $1
    mktemp -d /dev/shm/obj.XXXXXX | read $1
}

# destructor
destroy () {
    rm -rf ${(P)1}
    unset $1
}

# create objects

new class
new student

# set properties
>  $student/name   <<< "marc chantreux"
>  $class/name     <<< "OOP in zsh"
mkdir $class/students

# append to a collection
ln -s $student $class/students

# list the names of the members

print students of the $(< $class/name ) room:
sed 's/^/ * /' $class/students/*/name

destroy class
destroy student
